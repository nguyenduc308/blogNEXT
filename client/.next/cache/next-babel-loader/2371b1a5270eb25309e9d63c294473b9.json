{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nimport cookie from 'js-cookie';\nexport const signup = user => {\n  return fetch(`${API}/auth/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.error(err));\n};\nexport const signin = user => {\n  return fetch(`${API}/auth/signin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.error(err));\n};\nexport const signout = next => {\n  removeCookie('token');\n  removeLocalStorage('user');\n  next();\n  return fetch(`${API}/auth/signout`, {\n    method: 'GET'\n  }).then(res => console.log(\"Logout success\")).catch(err => console.error(err));\n};\nexport const setCookie = (key, value) => {\n  if (false) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\nexport const removeCookie = (key, value) => {\n  if (false) {\n    cookie.remove(key, value, {\n      expires: 1\n    });\n  }\n};\nexport const getCookie = (key, value) => {\n  if (false) {\n    return cookie.get(key);\n  }\n};\nexport const setLocalStorage = (key, value) => {\n  if (false) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\nexport const removeLocalStorage = (key, value) => {\n  if (false) {\n    localStorage.removeItem(key);\n  }\n};\nexport const authenticate = (data, next) => {\n  setCookie('token', data.token);\n  setLocalStorage('user', data.user);\n  next();\n};\nexport const isAuth = () => {\n  if (false) {\n    const cookieChecked = getCookie('token');\n\n    if (cookieChecked) {\n      if (localStorage.getItem('user')) {\n        return JSON.parse(localStorage.getItem('user'));\n      } else {\n        return false;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/Users/duclux/Desktop/NEXT SEO/client/actions/auth.js"],"names":["fetch","API","cookie","signup","user","method","headers","Accept","body","JSON","stringify","then","res","json","catch","err","console","error","signin","signout","next","removeCookie","removeLocalStorage","log","setCookie","key","value","set","expires","remove","getCookie","get","setLocalStorage","localStorage","setItem","removeItem","authenticate","data","token","isAuth","cookieChecked","getItem","parse"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\nimport {API} from '../config';\nimport cookie from 'js-cookie'\nexport const signup = (user) => {\n    return fetch(`${API}/auth/signup`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n    })\n    .then(res => {\n        return res.json()\n    })\n    .catch(err => console.error(err))\n}\n\nexport const signin = (user) => {\n    return fetch(`${API}/auth/signin`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n    })\n    .then(res => {\n        return res.json()\n    })\n    .catch(err => console.error(err))\n}\nexport const signout = next => {\n    removeCookie('token')\n    removeLocalStorage('user')\n    next()\n    return fetch(`${API}/auth/signout`, {\n        method: 'GET'\n    })\n    .then(res => console.log(\"Logout success\"))\n    .catch(err => console.error(err))\n}\nexport const setCookie = (key, value) => {\n    if(process.browser) {\n        cookie.set(key, value, {\n            expires: 1\n        })\n    }\n}\n\nexport const removeCookie = (key, value) => {\n    if(process.browser) {\n        cookie.remove(key, value, {\n            expires: 1\n        })\n    }\n}\nexport const getCookie = (key, value) => {\n    if(process.browser) {\n        return cookie.get(key)\n    }\n}\n\nexport const setLocalStorage = (key, value) => {\n    if(process.browser) {\n        localStorage.setItem(key, JSON.stringify(value))\n    }\n}\nexport const removeLocalStorage = (key, value) => {\n    if(process.browser) {\n        localStorage.removeItem(key)\n    }\n}\n\nexport const authenticate = (data, next) => {\n    setCookie('token', data.token);\n    setLocalStorage('user', data.user);\n    next()\n}\n\nexport const isAuth = () => {\n    if(process.browser) {\n        const cookieChecked = getCookie('token');\n        if(cookieChecked) {\n            if(localStorage.getItem('user')) {\n                return JSON.parse(localStorage.getItem('user'))\n            } else {\n                return false;\n            }\n        }\n\n    }\n}"]},"metadata":{},"sourceType":"module"}