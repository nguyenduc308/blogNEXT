{"ast":null,"code":"var _jsxFileName = \"/Users/duclux/Desktop/NEXT SEO/client/pages/categories/[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport Layout from '../../components/layout'; // import { getCategoryBlogs } from '../actions/categories'\n\nimport { API, DOMAIN, APP_NAME, FP_APP_ID } from '../config';\nimport renderHTML from 'react-render-html';\nimport moment from 'moment';\n\nconst Category = ({\n  blog\n}) => {\n  const [related, setRelated] = useState([]);\n\n  const loadRelated = () => {\n    getRelated({\n      blog\n    }).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setRelated(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    loadRelated();\n  }, []);\n\n  const head = () => {\n    return __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, blog.title, \" | \", APP_NAME), __jsx(\"meta\", {\n      name: \"description\",\n      content: blog.metaDesc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }), __jsx(\"link\", {\n      rel: \"canonical\",\n      href: `${DOMAIN}/blogs/${blog.slug}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }), __jsx(\"meta\", {\n      property: \"og:title\",\n      content: `${blog.title} || ${APP_NAME}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }), __jsx(\"meta\", {\n      property: \"og:description\",\n      content: blog.metaDesc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }), __jsx(\"meta\", {\n      property: \"og:type\",\n      content: \"website\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }), __jsx(\"meta\", {\n      property: \"og:url\",\n      content: `${DOMAIN}/blogs/${blog.slug}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }), __jsx(\"meta\", {\n      property: \"og:site_name\",\n      content: `${APP_NAME}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }), __jsx(\"meta\", {\n      property: \"og:image\",\n      content: `${API}/posts/photo/${blog.slug}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }), __jsx(\"meta\", {\n      property: \"og:image:secure_url\",\n      content: `${API}/posts/photo/${blog.slug}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }), __jsx(\"meta\", {\n      property: \"og:image:type\",\n      content: \"image/jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }), __jsx(\"meta\", {\n      property: \"fb:app_id\",\n      content: FP_APP_ID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  const showBlogCategories = () => {\n    return blog.categories && blog.categories.map((c, i) => {\n      return __jsx(Link, {\n        key: i,\n        href: `/categories/${c.slug}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, __jsx(\"a\", {\n        className: \"mr-1 ml-1 mt-3 mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }, c.name));\n    });\n  };\n\n  const showBlogTags = () => {\n    return blog.tags && blog.tags.map((t, i) => {\n      return __jsx(Link, {\n        key: i,\n        href: `/categories/${t.slug}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, __jsx(\"a\", {\n        className: \"mr-1 ml-1 mt-3 mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, c.name));\n    });\n  };\n\n  const showRelatedBlogs = () => related && related.map((blog, i) => __jsx(\"li\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 70\n    }\n  }, __jsx(Link, {\n    href: `/${blog.slug}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 38\n    }\n  }, blog.title))));\n\n  return __jsx(React.Fragment, null, head(), __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"ma\"));\n};\n\nBlog.getInitialProps = ({\n  query\n}) => {\n  return getBlog(query.slug).then(data => {\n    if (data.error) {\n      console.log(data.error);\n    } else {\n      return {\n        blog: data\n      };\n    }\n  });\n};\n\nexport default Category;","map":{"version":3,"sources":["/Users/duclux/Desktop/NEXT SEO/client/pages/categories/[slug].js"],"names":["Head","Link","Layout","API","DOMAIN","APP_NAME","FP_APP_ID","renderHTML","moment","Category","blog","related","setRelated","useState","loadRelated","getRelated","then","data","error","console","log","useEffect","head","title","metaDesc","slug","showBlogCategories","categories","map","c","i","name","showBlogTags","tags","t","showRelatedBlogs","Blog","getInitialProps","query","getBlog"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport Link from 'next/link'\nimport Layout from '../../components/layout'\n// import { getCategoryBlogs } from '../actions/categories'\nimport { API, DOMAIN, APP_NAME, FP_APP_ID} from '../config'\nimport renderHTML from 'react-render-html'\nimport moment from 'moment'\n\nconst Category = ({blog}) => {\n    const [related, setRelated] = useState([])\n    const loadRelated = () => {\n        getRelated({blog}).then(data=> {\n            if(data.error) {\n                console.log(data.error);\n            } else {\n                setRelated(data)\n            }\n        })\n    }\n    useEffect(() => {\n        loadRelated()\n    }, [])\n    const head = () => {\n        return(\n            <Head>\n                <title>{blog.title} | {APP_NAME}</title>\n                <meta name=\"description\" content={blog.metaDesc}/>\n                <link rel=\"canonical\" href={`${DOMAIN}/blogs/${blog.slug}`} />\n                <meta property=\"og:title\" content={`${blog.title} || ${APP_NAME}`} />\n                <meta property=\"og:description\" content={blog.metaDesc} />\n                <meta property=\"og:type\" content=\"website\" />\n                <meta property=\"og:url\" content={`${DOMAIN}/blogs/${blog.slug}`} />\n                <meta property=\"og:site_name\" content={`${APP_NAME}`} />\n\n                <meta property=\"og:image\" content={`${API}/posts/photo/${blog.slug}`} />\n                <meta property=\"og:image:secure_url\" content={`${API}/posts/photo/${blog.slug}`} />\n                <meta property=\"og:image:type\" content=\"image/jpg\" />\n                <meta property=\"fb:app_id\" content={FP_APP_ID} />\n            </Head>\n        )\n    }\n    const showBlogCategories = () => {\n        return blog.categories && blog.categories.map((c,i) => {\n            return(\n                <Link key={i} href={`/categories/${c.slug}`}>\n                    <a className=\"mr-1 ml-1 mt-3 mb-3\">{c.name}</a>\n                </Link>\n            )\n        })\n    }\n    const showBlogTags = () => {\n        return blog.tags && blog.tags.map((t,i)=> {\n            return(\n                <Link key={i} href={`/categories/${t.slug}`}>\n                    <a className=\"mr-1 ml-1 mt-3 mb-3\">{c.name}</a>\n                </Link>\n            )\n        })\n    }\n    const showRelatedBlogs = () => related && related.map((blog,i)=> <li key={i}>\n        <Link href={`/${blog.slug}`}><a>{blog.title}</a></Link>\n    </li>)\n\n    return(\n        <>\n            {head()}\n            <Layout>\n                ma\n            </Layout>\n        </>\n    )\n}\nBlog.getInitialProps =({ query }) => {\n    return getBlog(query.slug)\n                .then(data=> {\n                    if(data.error) {\n                        console.log(data.error);\n                    } else {\n                        return {\n                            blog: data\n                        }\n                    }\n\n                })\n}\nexport default Category"]},"metadata":{},"sourceType":"module"}