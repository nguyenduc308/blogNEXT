{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nexport var create = function create(blog, token) {\n  return fetch(\"\".concat(API, \"/posts\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Authorization': \"Bearer \".concat(token)\n    },\n    body: blog\n  }).then(function (res) {\n    return res.json();\n  })[\"catch\"](function (err) {\n    return console.error(err);\n  });\n};\nexport var getAll = function getAll(limit, page) {\n  var data = {\n    limit: limit,\n    page: page\n  };\n  return fetch(\"\".concat(API, \"/posts/all\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(function (res) {\n    return res.json();\n  })[\"catch\"](function (err) {\n    return console.error(err);\n  });\n};\nexport var getBlog = function getBlog(slug) {\n  return fetch(\"\".concat(API, \"/posts/\").concat(slug), {\n    method: 'GET'\n  }).then(function (res) {\n    return res.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var getRelated = function getRelated(blog, limit) {\n  return fetch(\"\".concat(API, \"/posts/related\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(blog)\n  }).then(function (res) {\n    return res.json();\n  })[\"catch\"](function (err) {\n    return console.error(err);\n  });\n};\nexport var getBlogsForAd = function getBlogsForAd() {\n  return fetch(\"\".concat(API, \"/posts\"), {\n    method: 'GET',\n    body: JSON.stringify(data)\n  }).then(function (res) {\n    return res.json();\n  })[\"catch\"](function (err) {\n    return console.error(err);\n  });\n};","map":{"version":3,"sources":["/Users/duclux/Desktop/NEXT SEO/client/actions/blog.js"],"names":["fetch","API","create","blog","token","method","headers","Accept","body","then","res","json","err","console","error","getAll","limit","page","data","JSON","stringify","getBlog","slug","log","getRelated","getBlogsForAd"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAAQC,GAAR,QAAkB,WAAlB;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAOC,KAAP,EAAiB;AACnC,SAAOJ,KAAK,WAAIC,GAAJ,aAAiB;AACzBI,IAAAA,MAAM,EAAE,MADiB;AAEzBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,wCAA2BH,KAA3B;AAFK,KAFgB;AAMzBI,IAAAA,IAAI,EAAEL;AANmB,GAAjB,CAAL,CAQNM,IARM,CAQD,UAAAC,GAAG,EAAI;AACT,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GAVM,WAWA,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,GAXH,CAAP;AAYH,CAbM;AAcP,OAAO,IAAMG,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAQC,IAAR,EAAiB;AACnC,MAAMC,IAAI,GAAG;AACTF,IAAAA,KAAK,EAALA,KADS;AACFC,IAAAA,IAAI,EAAJA;AADE,GAAb;AAGA,SAAOjB,KAAK,WAAIC,GAAJ,iBAAqB;AAC7BI,IAAAA,MAAM,EAAE,MADqB;AAE7BC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAFoB;AAM7BC,IAAAA,IAAI,EAAEW,IAAI,CAACC,SAAL,CAAeF,IAAf;AANuB,GAArB,CAAL,CAQNT,IARM,CAQD,UAAAC,GAAG,EAAI;AACT,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GAVM,WAWA,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,GAXH,CAAP;AAYH,CAhBM;AAiBP,OAAO,IAAMS,OAAO,GAAG,SAAVA,OAAU,CAAAC,IAAI,EAAI;AAC3B,SAAOtB,KAAK,WAAIC,GAAJ,oBAAiBqB,IAAjB,GAAyB;AACrBjB,IAAAA,MAAM,EAAE;AADa,GAAzB,CAAL,CAGMI,IAHN,CAGW,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GAHd,WAIY,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACU,GAAR,CAAYX,GAAZ,CAAJ;AAAA,GAJf,CAAP;AAKH,CANM;AAOP,OAAO,IAAMY,UAAU,GAAG,SAAbA,UAAa,CAACrB,IAAD,EAAMa,KAAN,EAAgB;AACtC,SAAOhB,KAAK,WAAIC,GAAJ,qBAAyB;AACjCI,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAFwB;AAMjCC,IAAAA,IAAI,EAAEW,IAAI,CAACC,SAAL,CAAejB,IAAf;AAN2B,GAAzB,CAAL,CAQNM,IARM,CAQD,UAAAC,GAAG,EAAI;AACT,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GAVM,WAWA,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,GAXH,CAAP;AAYH,CAbM;AAcP,OAAO,IAAMa,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC/B,SAAOzB,KAAK,WAAIC,GAAJ,aAAiB;AACzBI,IAAAA,MAAM,EAAE,KADiB;AAEzBG,IAAAA,IAAI,EAAEW,IAAI,CAACC,SAAL,CAAeF,IAAf;AAFmB,GAAjB,CAAL,CAINT,IAJM,CAID,UAAAC,GAAG,EAAI;AACT,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GANM,WAOA,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,GAPH,CAAP;AAQH,CATM","sourcesContent":["import fetch from 'isomorphic-fetch';\nimport {API} from '../config';\n\nexport const create = (blog, token) => {\n    return fetch(`${API}/posts`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Authorization': `Bearer ${token}`\n        },\n        body: blog\n    })\n    .then(res => {\n        return res.json()\n    })\n    .catch(err => console.error(err))\n}\nexport const getAll = (limit, page) => {\n    const data = {\n        limit, page\n    }\n    return fetch(`${API}/posts/all`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n    })\n    .then(res => {\n        return res.json()\n    })\n    .catch(err => console.error(err))\n}\nexport const getBlog = slug => {\n    return fetch(`${API}/posts/${slug}`, {\n                    method: 'GET'\n                })\n                .then(res => res.json())\n                .catch(err => console.log(err))\n}\nexport const getRelated = (blog,limit) => {\n    return fetch(`${API}/posts/related`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(blog)\n    })\n    .then(res => {\n        return res.json()\n    })\n    .catch(err => console.error(err))\n}\nexport const getBlogsForAd = () => {\n    return fetch(`${API}/posts`, {\n        method: 'GET',\n        body: JSON.stringify(data)\n    })\n    .then(res => {\n        return res.json()\n    })\n    .catch(err => console.error(err))\n}"]},"metadata":{},"sourceType":"module"}