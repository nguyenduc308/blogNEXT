{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nexport const create = (blog, token) => {\n  return fetch(`${API}/posts`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: blog\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.error(err));\n};\nexport const getAll = (limit, page) => {\n  const data = {\n    limit,\n    page\n  };\n  return fetch(`${API}/posts/all`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.error(err));\n};\nexport const getBlog = slug => {\n  return fetch(`${API}/posts/${slug}`, {\n    method: 'GET'\n  }).then(res => res.json()).catch(err => console.log(err));\n};\nexport const getRelated = (blog, limit) => {\n  return fetch(`${API}/posts/related`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(blog)\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.error(err));\n};\nexport const getBlogsForAd = () => {\n  return fetch(`${API}/posts`, {\n    method: 'GET'\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.error(err));\n};\nexport const deleteBlog = (slug, token) => {\n  return fetch(`${API}/posts`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: blog\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.error(err));\n};","map":{"version":3,"sources":["/Users/duclux/Desktop/NEXT SEO/client/actions/blog.js"],"names":["fetch","API","create","blog","token","method","headers","Accept","body","then","res","json","catch","err","console","error","getAll","limit","page","data","JSON","stringify","getBlog","slug","log","getRelated","getBlogsForAd","deleteBlog"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\nimport {API} from '../config';\n\nexport const create = (blog, token) => {\n    return fetch(`${API}/posts`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Authorization': `Bearer ${token}`\n        },\n        body: blog\n    })\n    .then(res => {\n        return res.json()\n    })\n    .catch(err => console.error(err))\n}\nexport const getAll = (limit, page) => {\n    const data = {\n        limit, page\n    }\n    return fetch(`${API}/posts/all`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n    })\n    .then(res => {\n        return res.json()\n    })\n    .catch(err => console.error(err))\n}\nexport const getBlog = slug => {\n    return fetch(`${API}/posts/${slug}`, {\n                    method: 'GET'\n                })\n                .then(res => res.json())\n                .catch(err => console.log(err))\n}\nexport const getRelated = (blog,limit) => {\n    return fetch(`${API}/posts/related`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(blog)\n    })\n    .then(res => {\n        return res.json()\n    })\n    .catch(err => console.error(err))\n}\nexport const getBlogsForAd = () => {\n    return fetch(`${API}/posts`, {\n        method: 'GET'\n    })\n    .then(res => {\n        return res.json()\n    })\n    .catch(err => console.error(err))\n}\nexport const deleteBlog = (slug, token) => {\n    return fetch(`${API}/posts`, {\n        method: 'DELETE',\n        headers: {\n            Accept: 'application/json',\n            'Authorization': `Bearer ${token}`\n        },\n        body: blog\n    })\n    .then(res => {\n        return res.json()\n    })\n    .catch(err => console.error(err))\n}"]},"metadata":{},"sourceType":"module"}