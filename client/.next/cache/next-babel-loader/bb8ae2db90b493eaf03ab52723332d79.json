{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nexport const create = (tag, token) => {\n  return fetch(`${API}/tags`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify(tag)\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.error(err));\n};\nexport const getTags = () => {\n  return fetch(`${API}/tags`, {\n    method: 'GET'\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.error(err));\n};\nexport const getTag = slug => {\n  return fetch(`${API}/tags/${slug}`, {\n    method: 'GET'\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.error(err));\n};\nexport const deleteTag = (slug, token) => {\n  return fetch(`${API}/tags/${slug}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.error(err));\n};","map":{"version":3,"sources":["/Users/duclux/Desktop/NEXT SEO/client/actions/tag.js"],"names":["fetch","API","create","tag","token","method","headers","Accept","body","JSON","stringify","then","res","json","catch","err","console","error","getTags","getTag","slug","deleteTag"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAAQC,GAAR,QAAkB,WAAlB;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAClC,SAAOJ,KAAK,CAAE,GAAEC,GAAI,OAAR,EAAgB;AACxBI,IAAAA,MAAM,EAAE,MADgB;AAExBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGL,uBAAkB,UAASH,KAAM;AAH5B,KAFe;AAOxBI,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,GAAf;AAPkB,GAAhB,CAAL,CASNQ,IATM,CASDC,GAAG,IAAI;AACT,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GAXM,EAYNC,KAZM,CAYAC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAZP,CAAP;AAaH,CAdM;AAeP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAOlB,KAAK,CAAE,GAAEC,GAAI,OAAR,EAAgB;AACxBI,IAAAA,MAAM,EAAE;AADgB,GAAhB,CAAL,CAGNM,IAHM,CAGDC,GAAG,IAAI;AACT,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GALM,EAMNC,KANM,CAMAC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CANP,CAAP;AAOH,CARM;AASP,OAAO,MAAMI,MAAM,GAAIC,IAAD,IAAU;AAC5B,SAAOpB,KAAK,CAAE,GAAEC,GAAI,SAAQmB,IAAK,EAArB,EAAwB;AAChCf,IAAAA,MAAM,EAAE;AADwB,GAAxB,CAAL,CAGNM,IAHM,CAGDC,GAAG,IAAI;AACT,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GALM,EAMNC,KANM,CAMAC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CANP,CAAP;AAOH,CARM;AASP,OAAO,MAAMM,SAAS,GAAG,CAACD,IAAD,EAAOhB,KAAP,KAAiB;AACtC,SAAOJ,KAAK,CAAE,GAAEC,GAAI,SAAQmB,IAAK,EAArB,EAAwB;AAChCf,IAAAA,MAAM,EAAE,QADwB;AAEhCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGL,uBAAkB,UAASH,KAAM;AAH5B;AAFuB,GAAxB,CAAL,CAQNO,IARM,CAQDC,GAAG,IAAI;AACT,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GAVM,EAWNC,KAXM,CAWAC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAXP,CAAP;AAYH,CAbM","sourcesContent":["import fetch from 'isomorphic-fetch';\nimport {API} from '../config';\n\nexport const create = (tag, token) => {\n    return fetch(`${API}/tags`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(tag)\n    })\n    .then(res => {\n        return res.json()\n    })\n    .catch(err => console.error(err))\n}\nexport const getTags = () => {\n    return fetch(`${API}/tags`, {\n        method: 'GET',\n    })\n    .then(res => {\n        return res.json()\n    })\n    .catch(err => console.error(err))\n}\nexport const getTag = (slug) => {\n    return fetch(`${API}/tags/${slug}`, {\n        method: 'GET',\n    })\n    .then(res => {\n        return res.json()\n    })\n    .catch(err => console.error(err))\n}\nexport const deleteTag = (slug, token) => {\n    return fetch(`${API}/tags/${slug}`, {\n        method: 'DELETE',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n        },\n    })\n    .then(res => {\n        return res.json()\n    })\n    .catch(err => console.error(err))\n}\n\n"]},"metadata":{},"sourceType":"module"}