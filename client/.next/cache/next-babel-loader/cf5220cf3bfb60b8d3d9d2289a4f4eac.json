{"ast":null,"code":"var _jsxFileName = \"/Users/duclux/Desktop/NEXT SEO/client/components/crud/Category.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { isAuth, getCookie } from '../../actions/auth';\nimport { create, getCategories, deleteCategory } from '../../actions/category';\nimport CategoryTag from '../../pages/admin/crud/category-tag';\n\nconst Category = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    name: '',\n    error: false,\n    success: false,\n    categories: [],\n    removed: false\n  });\n  const {\n    name,\n    error,\n    success,\n    categories,\n    removed\n  } = values;\n  const token = getCookie('token');\n  useEffect(() => {\n    loadCategories();\n  }, []);\n\n  const loadCategories = () => {\n    getCategories().then(categories => setValues(_objectSpread({}, values, {\n      categories\n    }))).catch(err => console.log(err));\n  };\n\n  const showCategories = () => {\n    return categories.map((c, i) => {\n      return button.btn.btn - outline - primary.mr - 1, mb - 1, ml - 1, __jsx(\"mt-3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 66\n        }\n      }, \"c.name\");\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    create({\n      name\n    }, token).then(res => {\n      setValues(_objectSpread({}, values, {\n        error: false,\n        success: true,\n        name: ''\n      }));\n    }).catch(err => {\n      setValues(_objectSpread({}, values, {\n        error: err,\n        success: false\n      }));\n    });\n  };\n\n  const handleChange = e => {\n    setValues(_objectSpread({}, values, {\n      name: e.target.value\n    }));\n  };\n\n  const newCategoryForm = () => {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"name\",\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, \"Name\"), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: name,\n      name: \"name\",\n      onChange: handleChange,\n      required: true,\n      placeholder: \"Category name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }), __jsx(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary mt-2 right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"Submit\")));\n  };\n\n  return __jsx(React.Fragment, null, newCategoryForm(), showCategories());\n};\n\nexport default Category;","map":{"version":3,"sources":["/Users/duclux/Desktop/NEXT SEO/client/components/crud/Category.js"],"names":["useState","useEffect","Link","Router","isAuth","getCookie","create","getCategories","deleteCategory","CategoryTag","Category","values","setValues","name","error","success","categories","removed","token","loadCategories","then","catch","err","console","log","showCategories","map","c","i","button","btn","outline","primary","mr","mb","ml","handleSubmit","e","preventDefault","res","handleChange","target","value","newCategoryForm"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport Link from 'next/link'\nimport Router from 'next/router'\nimport { isAuth, getCookie } from '../../actions/auth';\nimport { create, getCategories, deleteCategory } from '../../actions/category'\nimport CategoryTag from '../../pages/admin/crud/category-tag';\n\nconst Category = () => {\n    const [values, setValues] = useState({\n        name: '',\n        error: false,\n        success: false,\n        categories: [],\n        removed: false\n    })\n    const { name, error, success, categories, removed } = values;\n    const token = getCookie('token');\n    useEffect(()=> {\n        loadCategories()\n    },[])\n    const loadCategories = () => {\n        getCategories()\n            .then(categories => setValues({...values, categories}))\n            .catch(err => console.log(err))\n    }\n    const showCategories = () => {\n        return categories.map((c,i)=> {\n            return button.btn.btn-outline-primary.mr-1,mb-1,ml-1,<mt-3>\n                c.name\n            </mt-3>\n        })\n    }\n    const handleSubmit = e => {\n        e.preventDefault();\n        create({name}, token)\n            .then(res => {\n                setValues({\n                    ...values,\n                    error: false,\n                    success: true,\n                    name: ''\n                })\n            })\n            .catch(err => {\n                setValues({\n                    ...values,\n                    error:err,\n                    success: false\n                })\n            })\n    }\n    const handleChange = e => {\n        setValues({\n            ...values,\n            name: e.target.value\n        })\n    }\n    const newCategoryForm = () => {\n        return(\n            <form onSubmit={handleSubmit}> \n                <div className=\"form-group\">\n                    <label htmlFor=\"name\" className=\"text-muted\">Name</label>\n                    <input \n                    type=\"text\" \n                    className=\"form-control\"\n                    value={name}\n                    name=\"name\"\n                    onChange={handleChange}\n                    required\n                    placeholder=\"Category name\"\n                    />\n                    <button type=\"submit\" className=\"btn btn-primary mt-2 right\">\n                        Submit\n                    </button>\n                </div>\n            </form>\n        )\n    }\n    return(\n        <>\n            {newCategoryForm()}\n            {showCategories()}\n        </>\n    )\n}\nexport default Category;"]},"metadata":{},"sourceType":"module"}