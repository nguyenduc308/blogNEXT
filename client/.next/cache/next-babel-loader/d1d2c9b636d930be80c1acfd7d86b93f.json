{"ast":null,"code":"var _jsxFileName = \"/Users/duclux/Desktop/NEXT SEO/client/components/crud/Tag.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { getCookie } from '../../actions/auth';\nimport { create, getTags, deleteTag } from '../../actions/tag';\n\nconst Tag = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    name: '',\n    error: false,\n    success: false,\n    tags: [],\n    removed: false,\n    reload: false\n  });\n  const {\n    name,\n    error,\n    success,\n    tags,\n    removed,\n    reload\n  } = values;\n  const token = getCookie('token');\n  useEffect(() => {\n    loadTags();\n  }, [reload]);\n\n  const loadTags = () => {\n    getTags().then(tags => setValues(_objectSpread({}, values, {\n      tags\n    }))).catch(err => console.log(err));\n  };\n\n  const showTags = () => {\n    return tags.map((t, i) => {\n      return __jsx(\"button\", {\n        onDoubleClick: () => handleDelete(t.slug),\n        title: \"Double click to delete\",\n        key: i,\n        className: \"btn btn-outline-success mr-1 ml-1, mt-3, mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 24\n        }\n      }, t.name);\n    });\n  };\n\n  const handleDelete = slug => {\n    let isConfirm = window.confirm('Are you sure to delete it');\n\n    if (isConfirm) {\n      deleteTag(slug, token).then(res => {\n        setValues(_objectSpread({}, values, {\n          error: false,\n          name: '',\n          success: false,\n          removed: !removed,\n          reload: !reload\n        }));\n      }).catch(err => console.log(err));\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    create({\n      name\n    }, token).then(res => {\n      setValues(_objectSpread({}, values, {\n        error: false,\n        success: true,\n        name: '',\n        reload: !reload\n      }));\n    }).catch(err => {\n      setValues(_objectSpread({}, values, {\n        error: err,\n        success: false\n      }));\n    });\n  };\n\n  const handleChange = e => {\n    setValues(_objectSpread({}, values, {\n      name: e.target.value\n    }));\n  };\n\n  const newTagForm = () => {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"name\",\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, \"Name\"), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: name,\n      name: \"name\",\n      onChange: handleChange,\n      required: true,\n      placeholder: \"Tag name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }), __jsx(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary mt-2 right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, \"Submit\")));\n  };\n\n  const showSuccess = () => {\n    if (success) {\n      return __jsx(\"p\", {\n        className: \"text-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 20\n        }\n      }, \"Tag is created\");\n    }\n  };\n\n  const showRemoved = () => {\n    if (removed) {\n      return __jsx(\"p\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 20\n        }\n      }, \"Tag is removed\");\n    }\n  };\n\n  const showError = () => {\n    if (error) {\n      return __jsx(\"p\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 20\n        }\n      }, \"Tag already exist !\");\n    }\n  };\n\n  const handleMouseMove = e => {\n    setValues(_objectSpread({}, values, {\n      error: false,\n      success: false,\n      removed: null\n    }));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    onMouseMove: handleMouseMove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, newTagForm(), showTags()), showSuccess(), showError(), showRemoved());\n};\n\nexport default Tag;","map":{"version":3,"sources":["/Users/duclux/Desktop/NEXT SEO/client/components/crud/Tag.js"],"names":["useState","useEffect","Link","Router","getCookie","create","getTags","deleteTag","Tag","values","setValues","name","error","success","tags","removed","reload","token","loadTags","then","catch","err","console","log","showTags","map","t","i","handleDelete","slug","isConfirm","window","confirm","res","handleSubmit","e","preventDefault","handleChange","target","value","newTagForm","showSuccess","showRemoved","showError","handleMouseMove"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport Link from 'next/link'\nimport Router from 'next/router'\nimport { getCookie } from '../../actions/auth';\nimport { create, getTags, deleteTag } from '../../actions/tag'\nconst Tag = () => {\n    const [values, setValues] = useState({\n        name: '',\n        error: false,\n        success: false,\n        tags: [],\n        removed: false,\n        reload: false\n    })\n    const { name, error, success, tags, removed, reload } = values;\n    const token = getCookie('token');\n    useEffect(()=> {\n        loadTags()\n    },[reload])\n    const loadTags = () => {\n        getTags()\n            .then(tags => setValues({...values, tags}))\n            .catch(err => console.log(err))\n    }\n    const showTags = () => {\n        return tags.map((t,i)=> {\n                return <button \n                onDoubleClick={()=> handleDelete(t.slug)}\n                title=\"Double click to delete\" \n                key={i} \n                className=\"btn btn-outline-success mr-1 ml-1, mt-3, mb-1\">\n                    {t.name} \n                </button>\n        })\n    }\n    const handleDelete = slug => {\n        let isConfirm = window.confirm('Are you sure to delete it');\n        if(isConfirm) {\n            deleteTag(slug, token)\n                .then(res => {\n                    setValues({\n                        ...values,\n                        error: false,\n                        name: '',\n                        success: false,\n                        removed: !removed,\n                        reload: !reload\n                    })\n                })\n                .catch(err => console.log(err))\n        }\n    }\n    const handleSubmit = e => {\n        e.preventDefault();\n        create({name}, token)\n            .then(res => {\n                setValues({\n                    ...values,\n                    error: false,\n                    success: true,\n                    name: '',\n                    reload: !reload,\n                })\n            })\n            .catch(err => {\n                setValues({\n                    ...values,\n                    error:err,\n                    success: false\n                })\n            })\n    }\n    const handleChange = e => {\n        setValues({\n            ...values,\n            name: e.target.value\n        })\n    }\n    const newTagForm = () => {\n        return(\n            <form onSubmit={handleSubmit}> \n                <div className=\"form-group\">\n                    <label htmlFor=\"name\" className=\"text-muted\">Name</label>\n                    <input \n                    type=\"text\" \n                    className=\"form-control\"\n                    value={name}\n                    name=\"name\"\n                    onChange={handleChange}\n                    required\n                    placeholder=\"Tag name\"\n                    />\n                    <button type=\"submit\" className=\"btn btn-primary mt-2 right\">\n                        Submit\n                    </button>\n                </div>\n            </form>\n        )\n    }\n    const showSuccess = () => {\n        if(success) {\n            return <p className=\"text-success\">\n                Tag is created\n            </p>\n        }\n    }\n    const showRemoved = () => {\n        if(removed) {\n            return <p className=\"text-danger\">\n                Tag is removed\n            </p>\n        }\n    }\n    const showError = () => {\n        if(error) {\n            return <p className=\"text-danger\">\n                Tag already exist !\n            </p>\n        }\n    }\n    const handleMouseMove = (e) => {\n        setValues({\n            ...values,\n            error: false,\n            success: false,\n            removed: null\n        })\n    }\n    return(\n        <>\n            <div onMouseMove={handleMouseMove}>\n            {newTagForm()}\n            {showTags()}\n            </div>\n            {showSuccess()}\n            {showError()}\n            {showRemoved()}\n        </>\n    )\n}\nexport default Tag;"]},"metadata":{},"sourceType":"module"}