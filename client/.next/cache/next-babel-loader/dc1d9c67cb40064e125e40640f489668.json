{"ast":null,"code":"var _jsxFileName = \"/Users/duclux/Desktop/NEXT SEO/client/components/crud/BlogCreate.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport dynamic from 'next/dynamic';\nimport { withRouter } from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { getCategories } from '../../actions/category';\nimport { getTags } from '../../actions/tag';\nimport '../../node_modules/react-quill/dist/quill.snow.css';\nconst ReactQuill = dynamic(() => import('react-quill'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-quill')],\n    modules: ['react-quill']\n  }\n});\n\nconst BlogCreate = ({\n  router\n}) => {\n  const {\n    0: body,\n    1: setBody\n  } = useState({});\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    error: '',\n    sizeError: '',\n    success: '',\n    formData: '',\n    title: '',\n    hidePublishButton: false\n  });\n  const {\n    error,\n    sizeError,\n    success,\n    formData,\n    title,\n    hidePublishButton\n  } = values;\n\n  const createBlogForm = () => {\n    const handleSubmit = e => {\n      e.preventDefault();\n    };\n\n    const handleChange = name => e => {\n      console.log(e.target.value);\n    };\n\n    const handleBody = e => {\n      console.log(e);\n    };\n\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      value: title,\n      placeholder: \"Enter title\",\n      className: \"form-control\",\n      onChange: handleChange('title'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, __jsx(ReactQuill, {\n      modules: BlogCreate.modules,\n      formats: BlogCreate.formats,\n      value: body,\n      placeholder: \"Type songthing\",\n      onChange: handleBody,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, __jsx(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, \"Publish\")));\n  };\n\n  return __jsx(\"div\", {\n    className: \"contaner-fluit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, createBlogForm());\n};\n\nexport default withRouter(BlogCreate);\nBlogCreate.modules = {\n  toolbar: [[{\n    header: '1'\n  }, {\n    header: '2'\n  }, {\n    header: [3, 4, 5, 6]\n  }, {\n    font: []\n  }], [{\n    size: []\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n    list: 'ordered'\n  }, {\n    list: 'bullet'\n  }], ['link', 'image', 'video'], ['clean'], ['code-block']]\n};\nBlogCreate.formats = ['header', 'font', 'size', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'link', 'image', 'video', 'code-block'];","map":{"version":3,"sources":["/Users/duclux/Desktop/NEXT SEO/client/components/crud/BlogCreate.js"],"names":["Link","useState","useEffect","Router","dynamic","withRouter","getCookie","isAuth","getCategories","getTags","ReactQuill","ssr","BlogCreate","router","body","setBody","values","setValues","error","sizeError","success","formData","title","hidePublishButton","createBlogForm","handleSubmit","e","preventDefault","handleChange","name","console","log","target","value","handleBody","modules","formats","toolbar","header","font","size","list"],"mappings":"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","sourcesContent":["import Link from 'next/link'\nimport { useState, useEffect } from 'react'\nimport Router from 'next/router'\nimport dynamic from 'next/dynamic'\nimport { withRouter } from 'next/router'\nimport { getCookie, isAuth } from '../../actions/auth'\nimport { getCategories } from '../../actions/category'\nimport { getTags } from '../../actions/tag'\nimport '../../node_modules/react-quill/dist/quill.snow.css'\nconst ReactQuill = dynamic(()=> import('react-quill'), {ssr: false});\nconst BlogCreate = ({router}) => {\n    const [body, setBody] = useState({})\n    const [values, setValues] = useState({\n        error: '',\n        sizeError: '',\n        success: '',\n        formData: '',\n        title: '',\n        hidePublishButton: false\n    })\n    const { error, sizeError, success, formData, title, hidePublishButton } = values;\n    const createBlogForm = () => {\n        const handleSubmit = e => {                \n            e.preventDefault()\n        }\n        const handleChange = name => e => {\n            console.log(e.target.value)\n        }\n        const handleBody =  e => {\n            console.log(e)\n        }\n        return(\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <input \n                    type=\"text\" \n                    name=\"title\"\n                    value={title}\n                    placeholder=\"Enter title\"\n                    className=\"form-control\"\n                    onChange={handleChange('title')}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <ReactQuill\n                    modules={BlogCreate.modules}\n                    formats={BlogCreate.formats}\n                    value={body}\n                    placeholder=\"Type songthing\"\n                    onChange={handleBody}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Publish\n                    </button>\n                </div>\n            </form>\n        )\n    }\n    return(\n        <div className=\"contaner-fluit\">\n            {createBlogForm()}\n        </div>\n    )\n}\nexport default withRouter(BlogCreate);\n\nBlogCreate.modules = {\n    toolbar: [\n        [{ header: '1' }, { header: '2' }, { header: [3, 4, 5, 6] }, { font: [] }],\n        [{ size: [] }],\n        ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n        [{ list: 'ordered' }, { list: 'bullet' }],\n        ['link', 'image', 'video'],\n        ['clean'],\n        ['code-block']\n    ]\n};\nBlogCreate.formats = [\n    'header',\n    'font',\n    'size',\n    'bold',\n    'italic',\n    'underline',\n    'strike',\n    'blockquote',\n    'list',\n    'bullet',\n    'link',\n    'image',\n    'video',\n    'code-block'\n];"]},"metadata":{},"sourceType":"module"}