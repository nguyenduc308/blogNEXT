{"version":3,"file":"static/webpack/static/development/pages/admin/crud/blog.js.c7368c8ab65f14f65212.hot-update.js","sources":["webpack:///./components/crud/BlogCreate.js"],"sourcesContent":["// import Link from 'next/link'\n// import { useState, useEffect } from 'react'\n// import Router from 'next/router'\n// import dynamic from 'next/dynamic'\n// import { withRouter } from 'next/router'\n// import { getCookie, isAuth } from '../../actions/auth'\n// import { getCategories } from '../../actions/category'\n// import { getTags } from '../../actions/tag'\n// import { create } from '../../actions/blog'\n// import '../../node_modules/react-quill/dist/quill.snow.css'\n// const ReactQuill = dynamic(()=> import('react-quill'), {ssr: false});\n// const BlogCreate = ({router}) => {\n//     const [categories, setCategories] = useState([])\n//     const [tags, setTags] = useState([])\n//     const [checked, setChecked] = useState([])\n//     const [checkedTag, setCheckedTag] = useState([])\n//     const [body, setBody] = useState('')\n//     const [values, setValues] = useState({\n//         error: '',\n//         sizeError: '',\n//         success: '',\n//         formData: '',\n//         title: '',\n//         hidePublishButton: false\n//     })\n//     const token = getCookie('token')\n//     const initCategories = () => {\n//         getCategories()\n//             .then(data => setCategories(data))\n//             .catch(err => setValues({...values, error: err}))\n//     }\n//     const initTags = () => {\n//         getTags()\n//             .then(data => setTags(data))\n//             .catch(err => setValues({...values, error: err}))\n//     }\n//     const { error, sizeError, success, formData, title, hidePublishButton } = values;\n//     const getBlogLocalStorage = () => {\n//         if(typeof window !== 'undefined') {\n//             if(localStorage && localStorage.getItem('blog')) {\n//                 setBody(JSON.parse(localStorage.getItem('blog')))\n//             } else {\n//                 return false;\n//             }\n//         }\n//     }\n//     useEffect(() => {\n//         setValues({\n//             ...values,\n//             formData: new FormData(),\n//         })\n//         getBlogLocalStorage()\n//         initTags()\n//         initCategories()\n//     }, [router])\n//     const handleSubmit = e => {                \n//         e.preventDefault()\n//         console.log(formData);\n//         // create(formData, token)\n//         //     .then(data => {\n//         //         setValues({\n//         //             ...values,\n//         //             error:'',\n//         //             success: \"Publish success\"\n//         //         })\n//         //         setBody('')\n//         //         setCheckedTag('')\n//         //         setChecked('')\n//         //     })\n//         //     .catch(err => setValues({...values, error: err}))\n//     }\n//     const handleChange = name => e => {\n//         const value = name === 'photo' ? e.target.files[0] : e.target.value\n//         formData.set(name, value)\n//         setValues({\n//             ...values,\n//             [name]: value,\n//             formData,\n//             error:''\n//         })\n//     }\n//     const handleBody =  e => {\n//         setBody(e)\n//         formData.append('body', e);\n//         console.log(formData);\n//         if(localStorage) {\n//             localStorage.setItem('blog', JSON.stringify(e))\n//         }\n//     }\n//     const createBlogForm = () => {\n//         return(\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"form-group\">\n//                     <input \n//                     type=\"text\" \n//                     name=\"title\"\n//                     value={title}\n//                     placeholder=\"Enter title\"\n//                     className=\"form-control\"\n//                     onChange={handleChange('title')}\n//                     />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <ReactQuill\n//                     modules={BlogCreate.modules}\n//                     formats={BlogCreate.formats}\n//                     value={body}\n//                     placeholder=\"Type songthing\"\n//                     onChange={handleBody}\n//                     />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <button type=\"submit\" className=\"btn btn-primary\">\n//                         Publish\n//                     </button>\n//                 </div>\n//             </form>\n//         )\n//     }\n//     const handleToggle = c => () => {\n//         setValues({\n//             ...values,\n//             error: ''\n//         })\n//         const clickedCategory = checked.indexOf(c);\n//         let all = [...checked]\n//         if(clickedCategory === -1) {\n//             all.push(c)\n//         } else {\n//             all.splice(clickedCategory, 1)\n//         }\n//         setChecked(all)\n//         formData.set('categories', all)\n//     }\n//     const handleTagToggle = t => () => {\n//         setValues({\n//             ...values,\n//             error: ''\n//         })\n//         const clickedTag = checkedTag.indexOf(t);\n//         let all = [...checkedTag]\n//         if(clickedTag === -1) {\n//             all.push(t)\n//         } else {\n//             all.splice(clickedTag, 1)\n//         }\n//         setCheckedTag(all)\n//         formData.set('tags', all)\n//     }\n//     const showCategories = () => {\n//         return (\n//             categories && categories.map((c,i) => {\n//                 return <li key={i} className=\"list-unstyled\">\n//                     <input onChange={handleToggle(c._id)} type=\"checkbox\" className=\"mr-2\"/>\n//                     <label htmlFor=\"\" className=\"form-check-label\">\n//                         {c.name}\n//                     </label>\n//                 </li>\n//             })\n//         )\n//     }\n//     const showTags = () => {\n//         return (\n//             tags && tags.map((t,i) => {\n//                 return <li key={i} className=\"list-unstyled\">\n//                     <input onChange={handleTagToggle(t._id)} type=\"checkbox\" className=\"mr-2\"/>\n//                     <label htmlFor=\"\" className=\"form-check-label\">\n//                         {t.name}\n//                     </label>\n//                 </li>\n//             })\n//         )\n//     }\n//     return(\n//         <>\n//             <div className=\"row\">\n//                 <div className=\"col-md-8\">\n//                     {createBlogForm()}\n//                 </div>\n//                 <div className=\"col-md-4\">\n//                     <div className=\"form-group pb-2\">\n//                         <h5>Featured image</h5>\n//                         <hr/>\n//                         <label htmlFor=\"photo\" className=\"btn btn-outline-info\">Upload image</label>\n//                         <input \n//                         type=\"file\" \n//                         accept=\"images/*\"\n//                         id=\"photo\"\n//                         name=\"photo\"\n//                         onChange={handleChange('photo')}\n//                         hidden\n//                         />\n//                     </div>\n//                     <div className=\"categories-list\">\n//                         <h5>Categories</h5>\n//                         <hr />\n//                         <ul style={{\n//                             maxHeight: '400px',\n//                             overflowY: 'scroll'\n//                         }}>\n//                             {showCategories()}\n//                         </ul>\n//                     </div>\n//                     <div className=\"tag-list\">\n//                         <h5>Tags</h5>\n//                         <hr/>\n//                         <ul style={{\n//                             maxHeight: '400px',\n//                             overflowY: 'scroll'\n//                         }}>\n//                             {showTags()}\n//                         </ul>\n//                     </div>\n//                 </div>\n//             </div>\n//         </>\n//     )\n// }\n// export default withRouter(BlogCreate);\n\n// BlogCreate.modules = {\n//     toolbar: [\n//         [{ header: '1' }, { header: '2' }, { header: [3, 4, 5, 6] }, { font: [] }],\n//         [{ size: [] }],\n//         ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n//         [{ list: 'ordered' }, { list: 'bullet' }],\n//         ['link', 'image', 'video'],\n//         ['clean'],\n//         ['code-block']\n//     ]\n// };\n// BlogCreate.formats = [\n//     'header',\n//     'font',\n//     'size',\n//     'bold',\n//     'italic',\n//     'underline',\n//     'strike',\n//     'blockquote',\n//     'list',\n//     'bullet',\n//     'link',\n//     'image',\n//     'video',\n//     'code-block'\n// ];\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport dynamic from 'next/dynamic';\nimport { withRouter } from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { getCategories } from '../../actions/category';\nimport { getTags } from '../../actions/tag';\nimport { create } from '../../actions/blog';\nconst ReactQuill = dynamic(() => import('react-quill'), { ssr: false });\nimport '../../node_modules/react-quill/dist/quill.snow.css';\n// import { QuillModules, QuillFormats } from '../../helpers/quill';\nconst BlogCreate = ({ router }) => {\n    const blogFromLS = () => {\n        if (typeof window === 'undefined') {\n            return false;\n        }\n\n        if (localStorage.getItem('blog')) {\n            return JSON.parse(localStorage.getItem('blog'));\n        } else {\n            return false;\n        }\n    };\n\n    const [categories, setCategories] = useState([]);\n    const [tags, setTags] = useState([]);\n\n    const [checked, setChecked] = useState([]); // categories\n    const [checkedTag, setCheckedTag] = useState([]); // tags\n\n    const [body, setBody] = useState(blogFromLS());\n    const [values, setValues] = useState({\n        error: '',\n        sizeError: '',\n        success: '',\n        formData: '',\n        title: '',\n        hidePublishButton: false,\n        loading: false\n    });\n\n    const { error, sizeError, success, formData, title, hidePublishButton, loading } = values;\n    const token = getCookie('token');\n\n    useEffect(() => {\n        setValues({ ...values, formData: new FormData() });\n        initCategories();\n        initTags();\n    }, [router]);\n\n    const initCategories = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setCategories(data);\n            }\n        });\n    };\n\n    const initTags = () => {\n        getTags().then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setTags(data);\n            }\n        });\n    };\n\n    const publishBlog = e => {\n        setValues({ ...values, loading: true });\n        e.preventDefault();\n        // console.log('ready to publishBlog');\n        create(formData, token).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error, loading: false });\n            } else {\n                setValues({\n                    ...values,\n                    loading: false,\n                    title: '',\n                    error: '',\n                    success: `A new blog titled \"${data.title}\" is created`\n                });\n                setBody('');\n                setCategories([]);\n                setTags([]);\n            }\n        });\n    };\n\n    const handleChange = name => e => {\n        // console.log(e.target.value);\n        const value = name === 'photo' ? e.target.files[0] : e.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value, formData, error: '' });\n    };\n\n    const handleBody = e => {\n        // console.log(e);\n        setBody(e);\n        formData.set('body', e);\n        if (typeof window !== 'undefined') {\n            localStorage.setItem('blog', JSON.stringify(e));\n        }\n    };\n\n    const handleToggle = c => () => {\n        setValues({ ...values, error: '' });\n        // return the first index or -1\n        const clickedCategory = checked.indexOf(c);\n        const all = [...checked];\n\n        if (clickedCategory === -1) {\n            all.push(c);\n        } else {\n            all.splice(clickedCategory, 1);\n        }\n        setChecked(all);\n        formData.set('categories', all);\n    };\n\n    const handleTagsToggle = t => () => {\n        setValues({ ...values, error: '' });\n        // return the first index or -1\n        const clickedTag = checked.indexOf(t);\n        const all = [...checkedTag];\n\n        if (clickedTag === -1) {\n            all.push(t);\n        } else {\n            all.splice(clickedTag, 1);\n        }\n        console.log(all);\n        setCheckedTag(all);\n        formData.set('tags', all);\n    };\n\n    const showCategories = () => {\n        return (\n            categories &&\n            categories.map((c, i) => (\n                <li key={i} className=\"list-unstyled\">\n                    <input onChange={handleToggle(c._id)} type=\"checkbox\" className=\"mr-2\" />\n                    <label className=\"form-check-label\">{c.name}</label>\n                </li>\n            ))\n        );\n    };\n\n    const showTags = () => {\n        return (\n            tags &&\n            tags.map((t, i) => (\n                <li key={i} className=\"list-unstyled\">\n                    <input onChange={handleTagsToggle(t._id)} type=\"checkbox\" className=\"mr-2\" />\n                    <label className=\"form-check-label\">{t.name}</label>\n                </li>\n            ))\n        );\n    };\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-success\" style={{ display: success ? '' : 'none' }}>\n            {success}\n        </div>\n    );\n\n    const showLoading = () => (\n        <div className=\"alert alert-info\" style={{ display: loading ? '' : 'none' }}>\n            Loading...\n        </div>\n    );\n\n    const createBlogForm = () => {\n        return (\n            <form onSubmit={publishBlog}>\n                <div className=\"form-group\">\n                    <label className=\"text-muted\">Title</label>\n                    <input type=\"text\" className=\"form-control\" value={title} onChange={handleChange('title')} />\n                </div>\n\n                <div className=\"form-group\">\n                    <ReactQuill\n                        // modules={QuillModules}\n                        // formats={QuillFormats}\n                        value={body}\n                        placeholder=\"Write something amazing...\"\n                        onChange={handleBody}\n                    />\n                </div>\n\n                <div>\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Publish\n                    </button>\n                </div>\n            </form>\n        );\n    };\n\n    return (\n        <div className=\"container-fluid pb-5\">\n            <div className=\"row\">\n                <div className=\"col-md-8\">\n                    {createBlogForm()}\n                    <div className=\"pt-3\">\n                        {showError()}\n                        {showSuccess()}\n                        {showLoading()}\n                    </div>\n                </div>\n\n                <div className=\"col-md-4\">\n                    <div>\n                        <div className=\"form-group pb-2\">\n                            <h5>Featured image</h5>\n                            <hr />\n\n                            <small className=\"text-muted\">Max size: 1mb</small>\n                            <br />\n                            <label className=\"btn btn-outline-info\">\n                                Upload featured image\n                                <input onChange={handleChange('photo')} type=\"file\" accept=\"image/*\" hidden />\n                            </label>\n                        </div>\n                    </div>\n                    <div>\n                        <h5>Categories</h5>\n                        <hr />\n\n                        <ul style={{ maxHeight: '200px', overflowY: 'scroll' }}>{showCategories()}</ul>\n                    </div>\n                    <div>\n                        <h5>Tags</h5>\n                        <hr />\n                        <ul style={{ maxHeight: '200px', overflowY: 'scroll' }}>{showTags()}</ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(BlogCreate);\n"],"mappingsiBAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AApbA;AACA;AAcA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAdA;AACA;AAesourceRoot":""}