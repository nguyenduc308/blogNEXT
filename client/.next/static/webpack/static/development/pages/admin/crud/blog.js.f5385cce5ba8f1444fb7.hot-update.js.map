{"version":3,"file":"static/webpack/static/development/pages/admin/crud/blog.js.f5385cce5ba8f1444fb7.hot-update.js","sources":["webpack:///./components/crud/BlogCreate.js"],"sourcesContent":["import Link from 'next/link'\nimport { useState, useEffect } from 'react'\nimport Router from 'next/router'\nimport dynamic from 'next/dynamic'\nimport { withRouter } from 'next/router'\nimport { getCookie, isAuth } from '../../actions/auth'\nimport { getCategories } from '../../actions/category'\nimport { getTags } from '../../actions/tag'\nimport '../../node_modules/react-quill/dist/quill.snow.css'\nconst ReactQuill = dynamic(()=> import('react-quill'), {ssr: false});\nconst BlogCreate = ({router}) => {\n    const [categories, setCategories] = useState([])\n    const [tags, setTags] = useState([])\n    const [check, setCheck] = useState([])\n    const [checkTag, setCheckTag] = useState([])\n    const [body, setBody] = useState({})\n    const [values, setValues] = useState({\n        error: '',\n        sizeError: '',\n        success: '',\n        formData: '',\n        title: '',\n        hidePublishButton: false\n    })\n    const initCategories = () => {\n        getCategories()\n            .then(data => setCategories(data))\n            .catch(err => setValues({...values, error: err}))\n    }\n    const initTags = () => {\n        getTags()\n            .then(data => setTags(data))\n            .catch(err => setValues({...values, error: err}))\n    }\n    const { error, sizeError, success, formData, title, hidePublishButton } = values;\n    const getBlogLocalStorage = () => {\n        if(typeof window !== 'undefined') {\n            if(localStorage && localStorage.getItem('blog')) {\n                setBody(JSON.parse(localStorage.getItem('blog')))\n            } else {\n                return false;\n            }\n        }\n    }\n    useEffect(() => {\n        setValues({\n            ...values,\n            formData: new FormData(),\n        })\n        getBlogLocalStorage()\n        initTags()\n        initCategories()\n    }, [router])\n    const handleSubmit = e => {                \n        e.preventDefault()\n    }\n    const handleChange = name => e => {\n        const value = name === 'photo' ? e.target.file[0] : e.target.value\n        formData.set(name, value)\n        setValues({\n            ...values,\n            [name]: value,\n            formData,\n            error:''\n        })\n    }\n    const handleBody =  e => {\n        setBody(e)\n        formData.set('body', e);\n        if(localStorage) {\n            localStorage.setItem('blog', JSON.stringify(e))\n        }\n    }\n    const createBlogForm = () => {\n        return(\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <input \n                    type=\"text\" \n                    name=\"title\"\n                    value={title}\n                    placeholder=\"Enter title\"\n                    className=\"form-control\"\n                    onChange={handleChange('title')}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <ReactQuill\n                    modules={BlogCreate.modules}\n                    formats={BlogCreate.formats}\n                    value={body}\n                    placeholder=\"Type songthing\"\n                    onChange={handleBody}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Publish\n                    </button>\n                </div>\n            </form>\n        )\n    }\n    const showCategories = () => {\n        return (\n            categories && categories.map((c,i) => {\n                return <li key={i} className=\"list-unstyled\">\n                    <input type=\"checkbox\" className=\"mr-2\"/>\n                    <label htmlFor=\"\" className=\"form-check-label\">\n                        {c.name}\n                    </label>\n                </li>\n            })\n        )\n    }\n    const showTags = () => {\n        return (\n            tags && tags.map((t,i) => {\n                return <li key={i} className=\"list-unstyled\">\n                    <input type=\"checkbox\" className=\"mr-2\"/>\n                    <label htmlFor=\"\" className=\"form-check-label\">\n                        {t.name}\n                    </label>\n                </li>\n            })\n        )\n    }\n    return(\n        <>\n            <div className=\"row\">\n                <div className=\"col-md-8\">\n                    {createBlogForm()}\n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"categories-list\">\n                        <h5>Categories</h5>\n                        <hr />\n                        <ul style={{\n                            maxHeight: '400px',\n                            overflowY: 'scroll'\n                        }}>\n                            {showCategories()}\n                        </ul>\n                    </div>\n                    <div className=\"tag-list\">\n                        <h5>Tags</h5>\n                        <hr/>\n                        <ul style={{\n                            maxHeight: '400px',\n                            overflowY: 'scroll'\n                        }}>\n                            {showTags()}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\nexport default withRouter(BlogCreate);\n\nBlogCreate.modules = {\n    toolbar: [\n        [{ header: '1' }, { header: '2' }, { header: [3, 4, 5, 6] }, { font: [] }],\n        [{ size: [] }],\n        ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n        [{ list: 'ordered' }, { list: 'bullet' }],\n        ['link', 'image', 'video'],\n        ['clean'],\n        ['code-block']\n    ]\n};\nBlogCreate.formats = [\n    'header',\n    'font',\n    'size',\n    'bold',\n    'italic',\n    'underline',\n    'strike',\n    'blockquote',\n    'list',\n    'bullet',\n    'link',\n    'image',\n    'video',\n    'code-block'\n];"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAOA;AACA;AACA;AACA;AACA;AACA;AANA;AANA;AAAA;AACA;AAaA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAMA;AATA;AACA;AASA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AALA;AAWA;;;;A","sourceRoot":""}